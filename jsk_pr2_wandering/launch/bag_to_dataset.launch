<launch>

  <arg name="bagfile_in" />
  <arg name="dataset_dir" />

  <param name="/use_sim_time" value="true" />

  <arg name="camera" value="kinect_head_c2" />
  <include file="$(find jsk_data)/launch/pr2_play.launch">
    <arg name="bagfile_names" value="$(arg bagfile_in)" />
    <arg name="camera" value="$(arg camera)" />
  </include>

  <include file="$(find jsk_pr2_wandering)/launch/publish_occluded_mask.launch" />

  <node name="data_collection_server" pkg="jsk_data" type="data_collection_server.py"
        output="screen">
    <rosparam subst_value="true">
      save_dir: $(arg dataset_dir)
      topics:
        - name: $(arg camera)/rgb/image_rect_color
          msg_class: sensor_msgs/Image
          fname: image.png
          savetype: ColorImage
        - name: $(arg camera)/depth_registered/hw_registered/image_rect_raw
          msg_class: sensor_msgs/Image
          fname: depth.pkl
          savetype: DepthImage
        - name: $(arg camera)/filtered_point_decomposer/label
          msg_class: sensor_msgs/Image
          fname: label.png
          savetype: LabelImage
    </rosparam>
  </node>

  <node name="camera_coords_change_trigger"
        pkg="jsk_pr2_wandering" type="camera_coords_change_trigger.py"
        output="screen">
    <remap from="~trigger" to="data_collection_server/save_request" />
  </node>

  <!-- visualize -->
  <node name="image_view0"
        pkg="image_view" type="image_view">
    <remap from="image" to="$(arg camera)/rgb/image_rect_color" />
  </node>
  <node name="image_view1"
        pkg="image_view" type="image_view">
    <remap from="image" to="$(arg camera)/depth_registered/hw_registered/image_rect_raw" />
    <rosparam>
      do_dynamic_scaling: true
    </rosparam>
  </node>
  <node name="image_view2"
        pkg="image_view" type="image_view">
    <remap from="image" to="$(arg camera)/filtered_point_decomposer/label" />
  </node>
  <node name="label_image_decomposer"
        pkg="jsk_perception" type="label_image_decomposer.py">
    <remap from="~input" to="$(arg camera)/rgb/image_rect_color" />
    <remap from="~input/label" to="$(arg camera)/filtered_point_decomposer/label" />
    <rosparam>
      approximate_sync: true
      queue_size: 100
    </rosparam>
  </node>
  <node name="image_view3"
        pkg="image_view" type="image_view">
    <remap from="image" to="label_image_decomposer/output/label_viz" />
  </node>

</launch>
